package rpg;

import java.util.*;

/**
 * @author Ilari Massa
 * @version Mar 20, 2019
 *
 */
public class Esineet implements Iterable<Esine> {
   
   //private static final int MAX_ESINEITA = 8;
   private String           tiedostonNimi = "";
   //private Esine[]          alkiot = new Esine[MAX_ESINEITA];
   private final Collection<Esine> alkiot = new ArrayList<Esine>();

   /**
   * Esineiden muodostaja vielä tyhjä
   */
   public Esineet() {
       // Attribuuttien oma alustus riittää
   }
   
    /**
    * @param esine joka lisätään
    * @example
    * <pre name="test">
    *  #THROWS SailoExcpetion
    *  Esineet esineet = new esineet();
    *  Esine aku1 = new Esine(); Esine aku2 = new Esine();
    *  esineet.getLkm() === 0;
    *  esineet.lisaa(aku1); esineet.getLkm() === 1;
    *  esineet.lisaa(aku2); esineet.getLkm() === 2;
    *  esineet.lisaa(aku1); esineet.getLkm() === 3;
    *  esineet.anna(0) === aku1;
    *  esineet.anna(1) === aku2;
    *  esineet.anna(2) === aku1;
    *  esineet.anna(1) == aku1 === false;
    *  esineet.anna(3) === aku1; #THROWS IndexOutOfBoundsException
    *  esineet.lisaa(aku1); esineet.getLkm() === 4;
    *  esineet.lisaa(aku1); esineet.getLkm() === 5;
    *  esineet.lisaa(aku1); #THROWS SailoException
    * </pre>
    */
   public void lisaa(Esine esine) {
       alkiot.add(esine); 
   }
  

   /**
 * @param tunnusNro esineen tunnusNro
 * @return loydetyt esineet
 */
   public List<Esine> annaEsine(int tunnusNro) {
       List<Esine> loydetyt = new ArrayList<Esine>();
       for (Esine esine : alkiot) 
           if (esine.getIDnumero() == tunnusNro) loydetyt.add(esine);

       return loydetyt;
   }

    @Override
    public Iterator<Esine> iterator() {
        return alkiot.iterator();
    }

   /**
    * Lukee tyylien nimet tiedostosta.  Kesken.
    * @param hakemisto tiedoston hakemisto
    * @throws SailoException jos lukeminen epÃ¤onnistuu
    */
   public void lueTiedostosta(String hakemisto) throws SailoException {
       tiedostonNimi = hakemisto + "/tyylienNimet.dat";
       throw new SailoException("Ei osata vielÃ¤ lukea tiedostoa " + tiedostonNimi);
   }


   /**
    * Tallentaa tyylien nimet tiedostoon.  Kesken.
    * @throws SailoException jos tallennus epÃ¤onnistuu
    */
   public void tallenna() throws SailoException {
       throw new SailoException("Ei osata vielÃ¤ tallentaa tiedostoa " + tiedostonNimi);
   }
   
   
   /**
    * Palauttaa Esineiden lukumÃ¤Ã¤rÃ¤n
    * @return adminien tyylikategorioiden lukumÃ¤Ã¤rÃ¤
    */
   public int getLkm() {
       return alkiot.size();
   }   
   
   /**
    * Testiohjelma Esineiden nimille
    * @param args ei kÃ¤ytÃ¶ssÃ¤
    */
   public static void main(String[] args) {
       Esineet esineet = new Esineet();
       Esine rotu1 = new Esine();
       rotu1.taytaMiekka(2);
       Esine rotu2 = new Esine();
       rotu2.taytaMiekka(1);
       Esine rotu3 = new Esine();
       rotu3.taytaMiekka(3);
       Esine rotu4 = new Esine();
       rotu4.taytaMiekka(4);

       esineet.lisaa(rotu1);
       esineet.lisaa(rotu2);
       esineet.lisaa(rotu3);
       esineet.lisaa(rotu2);
       esineet.lisaa(rotu4);

       System.out.println("============= Esineet testi =================");

       List<Esine> rodut2 = esineet.annaEsine(0);
       

       for (Esine rotu : rodut2) {
           rotu.tulosta(System.out);
       }
   }
   
   
}
