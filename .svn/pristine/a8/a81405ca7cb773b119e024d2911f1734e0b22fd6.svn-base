package rpg;

/**
 * @author Ilari Massa
 * @version Mar 20, 2019
 *
 */
public class Esineet {

   private static final int MAX_ESINEITA = 8;
   private int              lkm = 0;
   private String           tiedostonNimi = "";
   private Esine[]          alkiot = new Esine[MAX_ESINEITA];
   
   /**
   * Esineiden muodostaja vielä tyhjä
   */
   public Esineet() {
       // Attribuuttien oma alustus riittää
   }
   
    /**
    * @param esine joka lisätään
    * @throws SailoException nappaa jos yrittää lisätä täyteen olevaan taulukkoon
    * @example
    * <pre name="test">
    *  #THROWS SailoExcpetion
    *  Esineet esineet = new esineet();
    *  Esine aku1 = new Esine(); Esine aku2 = new Esine();
    *  esineet.getLkm() === 0;
    *  esineet.lisaa(aku1); esineet.getLkm() === 1;
    *  esineet.lisaa(aku2); esineet.getLkm() === 2;
    *  esineet.lisaa(aku1); esineet.getLkm() === 3;
    *  esineet.anna(0) === aku1;
    *  esineet.anna(1) === aku2;
    *  esineet.anna(2) === aku1;
    *  esineet.anna(1) == aku1 === false;
    *  esineet.anna(3) === aku1; #THROWS IndexOutOfBoundsException
    *  esineet.lisaa(aku1); esineet.getLkm() === 4;
    *  esineet.lisaa(aku1); esineet.getLkm() === 5;
    *  esineet.lisaa(aku1); #THROWS SailoException
    * </pre>
    */
   public void lisaa(Esine esine)throws SailoException {
       if (lkm >= alkiot.length) throw new SailoException("Liikaa alkioita");
       alkiot[lkm] = esine;
       lkm++;       
   }
  
   /**
   *Palauttaa viitteen i:teen tyylin nimeen.
   * @param i monennenko tyylin nimen viite halutaan
   * @return viite tyylin nimeen, jonka indeksi on i
   * @throws IndexOutOfBoundsException jos i ei ole sallitulla alueella  
   */   
   public Esine anna(int i) throws IndexOutOfBoundsException {
       if (i < 0 || lkm <= i)
           throw new IndexOutOfBoundsException("Laiton indeksi: " + i);
       return alkiot[i];
   }

   /**
    * Lukee tyylien nimet tiedostosta.  Kesken.
    * @param hakemisto tiedoston hakemisto
    * @throws SailoException jos lukeminen epÃ¤onnistuu
    */
   public void lueTiedostosta(String hakemisto) throws SailoException {
       tiedostonNimi = hakemisto + "/tyylienNimet.dat";
       throw new SailoException("Ei osata vielÃ¤ lukea tiedostoa " + tiedostonNimi);
   }


   /**
    * Tallentaa tyylien nimet tiedostoon.  Kesken.
    * @throws SailoException jos tallennus epÃ¤onnistuu
    */
   public void tallenna() throws SailoException {
       throw new SailoException("Ei osata vielÃ¤ tallentaa tiedostoa " + tiedostonNimi);
   }
   
   
   /**
    * Palauttaa Esineiden lukumÃ¤Ã¤rÃ¤n
    * @return adminien tyylikategorioiden lukumÃ¤Ã¤rÃ¤
    */
   public int getLkm() {
       return lkm;
   }   
   
   /**
    * Testiohjelma Esineiden nimille
    * @param args ei kÃ¤ytÃ¶ssÃ¤
    */
   public static void main(String[] args) {
       Esineet esineet = new Esineet();
       
       Esine esine1 = new Esine(), esine2 = new Esine();
       esine1.taytaMiekka(0);
       esine2.taytaMiekka(1);
       
       try {
           esineet.lisaa(esine1);
           esineet.lisaa(esine2);

           System.out.println("============= Tyylien nimien testi =================");

           for (int i = 0; i < esineet.getLkm(); i++) {
               Esine esin = esineet.anna(i);
               System.out.println("Esine paikassa: " + i);
               esin.tulosta(System.out);
           }

       } catch (SailoException ex) {
           System.err.println(ex.getMessage());
       }
   }
   
   
}
