package rpg;
// Generated by ComTest BEGIN
import java.io.File;
import rpg.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.03 13:42:35 // Generated by ComTest
 *
 */
public class HahmotTest {
    //



  // Generated by ComTest BEGIN
  /** 
   * testLisaa39 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa39() throws SailoException {    // Hahmot: 39
    Hahmot hahmot = new Hahmot(); 
    Hahmo aku1 = new Hahmo(); Hahmo aku2 = new Hahmo(); 
    assertEquals("From: Hahmot line: 43", 0, hahmot.getLkm()); 
    hahmot.lisaa(aku1); assertEquals("From: Hahmot line: 44", 1, hahmot.getLkm()); 
    hahmot.lisaa(aku2); assertEquals("From: Hahmot line: 45", 2, hahmot.getLkm()); 
    hahmot.lisaa(aku1); assertEquals("From: Hahmot line: 46", 3, hahmot.getLkm()); 
    assertEquals("From: Hahmot line: 47", aku1, hahmot.anna(0)); 
    assertEquals("From: Hahmot line: 48", aku2, hahmot.anna(1)); 
    assertEquals("From: Hahmot line: 49", aku1, hahmot.anna(2)); 
    assertEquals("From: Hahmot line: 50", false, hahmot.anna(1) == aku1); 
    try {
    assertEquals("From: Hahmot line: 51", aku1, hahmot.anna(3)); 
    fail("Hahmot: 51 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    hahmot.lisaa(aku1); assertEquals("From: Hahmot line: 52", 4, hahmot.getLkm()); 
    hahmot.lisaa(aku1); assertEquals("From: Hahmot line: 53", 5, hahmot.getLkm()); 
    try {
    hahmot.lisaa(aku1); 
    fail("Hahmot: 54 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta82 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta82() throws SailoException {    // Hahmot: 82
    Hahmot jasenet = new Hahmot(); 
    Hahmo aku1 = new Hahmo(), aku2 = new Hahmo(); 
    aku1.taytaAkuAnkka(); 
    aku2.taytaAkuAnkka(); 
    String hakemisto = "testikelmit"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    jasenet.lueTiedostosta(tiedNimi); 
    fail("Hahmot: 96 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    jasenet.lisaa(aku1); 
    jasenet.lisaa(aku2); 
    jasenet.tallenna(); 
    jasenet = new Hahmot();  // Poistetaan vanhat luomalla uusi
    jasenet.lueTiedostosta(tiedNimi);  // johon ladataan tiedot tiedostosta.
    Iterator<Hahmo> i = jasenet.iterator(); 
    assertEquals("From: Hahmot line: 103", aku1, i.next()); 
    assertEquals("From: Hahmot line: 104", aku2, i.next()); 
    assertEquals("From: Hahmot line: 105", false, i.hasNext()); 
    jasenet.lisaa(aku2); 
    jasenet.tallenna(); 
    assertEquals("From: Hahmot line: 108", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Hahmot line: 110", true, fbak.delete()); 
    assertEquals("From: Hahmot line: 111", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHahmotIterator237 
   * @throws SailoException when error
   */
  @Test
  public void testHahmotIterator237() throws SailoException {    // Hahmot: 237
    Hahmot hahmot = new Hahmot(); 
    Hahmo aku1 = new Hahmo(), aku2 = new Hahmo(); 
    aku1.rekisteroi(); aku2.rekisteroi(); 
    hahmot.lisaa(aku1); 
    hahmot.lisaa(aku2); 
    hahmot.lisaa(aku1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Hahmo hahmo:hahmot) // Kokeillaan for-silmukan toimintaa
    ids.append(" "+hahmo.getTunnusNro()); 
    String tulos = " " + aku1.getTunnusNro() + " " + aku2.getTunnusNro() + " " + aku1.getTunnusNro(); 
    assertEquals("From: Hahmot line: 256", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Hahmo>  i=hahmot.iterator(); i.hasNext(); ) { // ja iteraattorin toimintaa
    Hahmo hahmo = i.next(); 
    ids.append(" "+hahmo.getTunnusNro()); 
    }
    assertEquals("From: Hahmot line: 264", tulos, ids.toString()); 
    Iterator<Hahmo>  i=hahmot.iterator(); 
    assertEquals("From: Hahmot line: 267", true, i.next() == aku1); 
    assertEquals("From: Hahmot line: 268", true, i.next() == aku2); 
    assertEquals("From: Hahmot line: 269", true, i.next() == aku1); 
    try {
    i.next(); 
    fail("Hahmot: 271 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi325 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi325() throws SailoException {    // Hahmot: 325
    Hahmot hahmot = new Hahmot(); 
    Hahmo jasen1 = new Hahmo(); jasen1.parse("1|Ankka Aku|030201-115H|Paratiisitie 13|"); 
    Hahmo jasen2 = new Hahmo(); jasen2.parse("2|Ankka Tupu||030552-123B|"); 
    Hahmo jasen3 = new Hahmo(); jasen3.parse("3|Susi Sepe|121237-121V||131313|Perämetsä"); 
    Hahmo jasen4 = new Hahmo(); jasen4.parse("4|Ankka Iines|030245-115V|Ankkakuja 9"); 
    Hahmo jasen5 = new Hahmo(); jasen5.parse("5|Ankka Roope|091007-408U|Ankkakuja 12"); 
    hahmot.lisaa(jasen1); hahmot.lisaa(jasen2); hahmot.lisaa(jasen3); hahmot.lisaa(jasen4); hahmot.lisaa(jasen5); 
  } // Generated by ComTest END
}